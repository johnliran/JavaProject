{"name":"Java Project","tagline":"Colman Computer Science","body":"## Welcome\r\n- For more information please review our Javadocs web pages ([JavaGames](JavaGames_javadoc/javadoc/index.html), [GamesSolver](GamesSolver_javadoc/javadoc/index.html) and [RMIInterface](RMIInterface_javadoc/javadoc/index.html)).\r\n- The following project is programmed by Johnnatan Cohen and Liran Polak.\r\n\r\n## 2048\r\n2048 is played on a simple 4Ã—4 grid with tiles of varying colors overlaid that slide smoothly when a player moves them. The game uses the arrow keys (or swipe movements) to move tiles left, right, up, and down. If two tiles of the same number collide while moving, they will merge into a tile with the total value of the two tiles that collided. Higher-scoring tiles emit a soft glow. Every turn, a new tile will randomly appear in an empty spot on the board with a value of either 2 or 4. Use your arrow keys to move the tiles. When two tiles with the same number touch, they merge into one. Join the numbers and get to the 2048 tile!\r\n\r\n## Maze\r\nThe maze is played on a simple M*N grid. Each tile can be either a wall or a pathway for the mouse to move on.\r\nAt the beginning of the game, an A* Algorithm is being ran so the shortest and cheapest way for the mouse to get the cheese is calculated.\r\n\r\nThe player should get to the cheese in the lowest score that can be achieved, which is the score who's calculated by the A* Algorithm.\r\nThe player can move straight - a move that will cost him 10 points, and diagonal - 15 points. \r\nDiagonal move also make a shortcut of moves.\r\n\r\n===================================================================\r\n\r\n- You can save, quit, and load again whenever you want.\r\n- Both games can be controlled by keyboard arrows or Mouse dragging.\r\n- Developed on Mac OS X - Compatible to most of the common platforms.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}